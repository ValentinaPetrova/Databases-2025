use movies

SELECT title, name
FROM MOVIE INNER JOIN MOVIEEXEC ON MOVIE.PRODUCERC# = MOVIEEXEC.CERT#
WHERE PRODUCERC# IN (SELECT PRODUCERC#
					 FROM MOVIE
					 WHERE TITLE = 'Star Wars');

SELECT DISTINCT name
FROM MOVIE INNER JOIN MOVIEEXEC ON MOVIE.PRODUCERC# = MOVIEEXEC.CERT#
WHERE MOVIE.TITLE IN (SELECT MOVIETITLE
					  FROM STARSIN
					  WHERE STARNAME = 'Harrison Ford');

SELECT DISTINCT name, starname
FROM MOVIE JOIN STUDIO ON STUDIONAME = NAME
			JOIN STARSIN ON TITLE = MOVIETITLE
ORDER BY NAME, STARNAME;

SELECT STARNAME, NETWORTH, TITLE
FROM MOVIE JOIN MOVIEEXEC ON PRODUCERC# = CERT#
		   JOIN STARSIN ON TITLE = MOVIETITLE
WHERE NETWORTH = (SELECT MAX(NETWORTH)
				  FROM MOVIEEXEC);

SELECT NAME, MOVIETITLE
FROM MOVIESTAR LEFT JOIN STARSIN ON STARNAME = NAME
WHERE MOVIETITLE IS NULL;

USE pc

SELECT maker, PRODUCT.model, PRODUCT.type
FROM PRODUCT LEFT JOIN LAPTOP ON PRODUCT.MODEL = laptop.model
			 LEFT JOIN PC ON PRODUCT.MODEL = PC.model
			 LEFT JOIN printer ON PRODUCT.MODEL = printer.model
WHERE laptop.model IS NULL AND PC.model IS NULL AND printer.MODEL IS NULL;

SELECT DISTINCT maker
FROM PRODUCT
WHERE PRODUCT.type = 'LAPTOP' and maker in (SELECT maker
											FROM product
											WHERE PRODUCT.TYPE = 'Printer');

SELECT DISTINCT L1.hd
FROM laptop AS L1
WHERE EXISTS (SELECT *
			  FROM laptop AS L2
			  WHERE L1.hd = L2.hd AND L1.model != L2.model);

SELECT *
FROM PC LEFT JOIN PRODUCT ON PC.model = PRODUCT.model
WHERE PRODUCT.maker IS NULL;

USE ships

SELECT *
FROM SHIPS JOIN CLASSES ON SHIPS.CLASS = CLASSES.CLASS;


/*EXPLAIN TASK - WHAT WITH THE SAME NAME MEANS */
SELECT *
FROM CLASSES LEFT JOIN SHIPS ON SHIPS.CLASS= CLASSES.CLASS
WHERE SHIPS.NAME IS NOT NULL OR CLASSES.CLASS IN (SELECT NAME
											   FROM SHIPS);

/*WHY IN DIFFERENT ORDER*/
SELECT country, name
FROM CLASSES JOIN SHIPS ON SHIPS.CLASS= CLASSES.CLASS
			 LEFT JOIN OUTCOMES ON SHIPS.NAME = OUTCOMES.SHIP
WHERE OUTCOMES.BATTLE IS NULL;

SELECT SHIPS.NAME AS 'Ship Name'
FROM SHIPS JOIN CLASSES ON SHIPS.CLASS= CLASSES.CLASS
WHERE CLASSES.NUMGUNS >= 7 AND LAUNCHED = 1916;

SELECT ship, battle, date
FROM OUTCOMES JOIN BATTLES ON OUTCOMES.BATTLE = BATTLES.NAME
WHERE RESULT = 'sunk'
ORDER BY BATTLE;

SELECT name, displacement, launched
FROM SHIPS JOIN CLASSES ON SHIPS.CLASS= CLASSES.CLASS
WHERE NAME = SHIPS.CLASS;

/*IS THERE A WAY WITHOUT COUNTING ALL THE ITEMS OF CLASSES*/
SELECT CLASSES.CLASS, TYPE, COUNTRY, NUMGUNS, BORE, DISPLACEMENT
FROM CLASSES LEFT JOIN SHIPS ON SHIPS.CLASS= CLASSES.CLASS
WHERE NAME IS NULL;

SELECT SHIPS.name, displacement, numguns, result
FROM SHIPS JOIN CLASSES ON SHIPS.CLASS= CLASSES.CLASS
		   JOIN OUTCOMES ON SHIPS.NAME = SHIP
		   JOIN BATTLES ON OUTCOMES.BATTLE = BATTLES.NAME
WHERE BATTLES.NAME = 'North Atlantic';